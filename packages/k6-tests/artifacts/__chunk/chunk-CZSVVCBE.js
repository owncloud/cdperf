"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkVGN6T2MUjs = require('./chunk-VGN6T2MU.js');var c=e=>({..._chunkVGN6T2MUjs.g.call(void 0, e.platform),isSpace:e.resourceType===_chunkVGN6T2MUjs.b.space,isDirectory:e.resourceType===_chunkVGN6T2MUjs.b.directory,isOwner:!!e.isOwner}),u= exports.a =async e=>{let t={root:"",path:""},r=c(e),o,i;if(r.isSpace&&(o=`driveAlias === 'project/${e.resourceName}'`,i={$filter:"driveType eq 'project'"}),r.isDirectory&&!r.isOwner&&(o=`driveAlias === 'mountpoint/${e.resourceName}'`,i={$filter:"driveType eq 'mountpoint'"}),r.isDirectory&&r.isOwner&&(o=`driveAlias === 'personal/${e.userLogin}'`,i={$filter:"driveType eq 'personal'"}),r.isOwnCloudInfiniteScale){let n=await e.client.me.getMyDrives({params:i});[t.root]=_chunkVGN6T2MUjs.l.call(void 0, `$.value[?(@.${o})].id`,_optionalChain([n, 'optionalAccess', _ => _.body]))}return r.isOwnCloudInfiniteScale||(t.root=e.userLogin),(!r.isOwnCloudInfiniteScale||r.isDirectory&&r.isOwner)&&(t.path=e.resourceName),t},m= exports.b =async e=>{let t={root:"",path:""},r=c(e);if(r.isOwnCloudInfiniteScale&&r.isSpace){let o=await u({...e,isOwner:!0});if(o.root)return o;let i=await e.client.drive.createDrive({driveName:e.resourceName}),[n]=_chunkVGN6T2MUjs.l.call(void 0, "$.id",_optionalChain([i, 'optionalAccess', _2 => _2.body]));t.root=n}if(r.isOwnCloudInfiniteScale&&r.isDirectory){let o=e.client.me.getMyDrives({}),[i]=_chunkVGN6T2MUjs.l.call(void 0, "$.value[?(@.driveType === 'personal')].id",_optionalChain([o, 'optionalAccess', _3 => _3.body]));t.root=i}return r.isOwnCloudInfiniteScale||(t.root=e.userLogin),r.isDirectory&&(t.path=e.resourceName,await e.client.resource.createResource({root:t.root,resourcePath:e.resourceName})),t},p= exports.c =async e=>{let t=await u({...e,isOwner:!0});if(!t.root&&!t.path)return;let r=c(e);if(r.isOwnCloudInfiniteScale&&r.isSpace){await e.client.drive.deactivateDrive({driveId:t.root}),await e.client.drive.deleteDrive({driveId:t.root});return}e.client.resource.deleteResource({root:t.root,resourcePath:t.path})};exports.a = u; exports.b = m; exports.c = p;
