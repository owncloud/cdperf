#!/bin/bash
#
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Copyright (c) 2021 ownCloud GmbH                                      :::
# Apache License Version 2.0, January 2004                              :::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

trap "stop; exit;" SIGINT SIGTERM

host_docker_host=${DOCKER_HOST:-}

cloud_docker=${CDPERF_CLOUD_DOCKER:-"true"}
cloud_docker_host=${CDPERF_CLOUD_DOCKER_HOST:-}
cloud_docker_image=${CDPERF_CLOUD_DOCKER_IMAGE:-}
cloud_docker_publish=${CDPERF_CLOUD_DOCKER_PUBLISH:-}
cloud_oidc=${CDPERF_CLOUD_OIDC:-"false"}
cloud_oidc_issuer=${CDPERF_CLOUD_OIDC_ISSUER:-}
cloud_vendor=${CDPERF_CLOUD_VENDOR:-"ocis"}

k6_docker=${CDPERF_K6_DOCKER:-"true"}
k6_vus=${CDPERF_K6_VUS:-"3"}
k6_iterations=${CDPERF_K6_ITERATIONS:-"3"}
k6_duration=${CDPERF_K6_DURATION:-"1h0m0s"}
k6_debug=${CDPERF_K6_DEBUG:-}
k6_csv=${CDPERF_K6_CSV:-}
k6_json=${CDPERF_K6_JSON:-}
k6_out=${CDPERF_K6_OUT:-}
k6_scripts=${CDPERF_K6_SCRIPTS:-$(realpath "$(dirname "$0")/../tests/k6/test\-*.js")}
k6_test_host=${CDPERF_K6_TEST_HOST:-}
k6_quiet=${CDPERF_K6_QUIET:-}
k6_cloud_id=${CDPERF_K6_CLOUD_ID:-}
k6_cloud_login=${CDPERF_K6_CLOUD_LOGIN:-"admin"}
k6_cloud_password=${CDPERF_K6_CLOUD_PASSWORD:-"admin"}

usage(){
  echo "cdPerf: ownCloud cloud performance test"
  echo " "
  echo "options:"
  echo " --cloud-docker                 Use docker to run preconfigured clouds"
  echo "                                Supported values: ( true | false )"
  echo "                                Default: true"
  echo "                                ENV: CDPERF_CLOUD_DOCKER"
  echo "                                --"
  echo " --cloud-docker-host            Docker host to run the cloud if --cloud-docker is set to true"
  echo "                                ENV: CDPERF_CLOUD_DOCKER_HOST"
  echo "                                --"
  echo " --cloud-docker-image           Docker image to use if --cloud-docker is set to true"
  echo "                                Default:"
  echo "                                --cloud-vendor=ocis | owncloud/ocis"
  echo "                                --cloud-vendor=oc10 | owncloud/server"
  echo "                                --cloud-vendor=nextcloud | nextcloud"
  echo "                                ENV: CDPERF_CLOUD_DOCKER_IMAGE"
  echo "                                --"
  echo " --cloud-docker-publish         Docker published port if --cloud-docker is set to true"
  echo "                                Default:"
  echo "                                --cloud-vendor=ocis | 9200:9200"
  echo "                                --cloud-vendor=oc10 | 9200:8080"
  echo "                                --cloud-vendor=nextcloud | 9200:80"
  echo "                                ENV: CDPERF_CLOUD_DOCKER_PUBLISH"
  echo "                                --"
  echo " --cloud-oidc                   Use oidc issuer"
  echo "                                Supported values: ( true | false )"
  echo "                                Default: to false"
  echo "                                ENV: CDPERF_CLOUD_OIDC"
  echo "                                --"
  echo " --cloud-oidc-issuer            OIDC issuer url"
  echo "                                ENV: CDPERF_CLOUD_OIDC_ISSUER"
  echo "                                --"
  echo " --cloud-vendor                 Key of the cloud to use"
  echo "                                Supported values: ( ocis | oc10 | nextcloud )"
  echo "                                Default: ocis"
  echo "                                ENV: CDPERF_CLOUD_VENDOR"
  echo "                                --"
  echo " --k6-docker                    Use docker to run k6"
  echo "                                Supported values: ( true | false )"
  echo "                                Default: true"
  echo "                                ENV: CDPERF_K6_DOCKER"
  echo "                                --"
  echo " --k6-vus                       K6 number of virtual users"
  echo "                                Default: 3"
  echo "                                ENV: CDPERF_K6_VUS"
  echo "                                --"
  echo " --k6-iterations                K6 script total iteration limit (among all VUs)"
  echo "                                Default: 3"
  echo "                                ENV: CDPERF_K6_ITERATIONS"
  echo "                                --"
  echo " --k6-duration                  K6 test duration limit"
  echo "                                Default: 1h0m0s"
  echo "                                ENV: CDPERF_K6_DURATION"
  echo "                                --"
  echo " --k6-debug                     K6 debug enabled for http requests"
  echo "                                ENV: CDPERF_K6_DEBUG"
  echo "                                --"
  echo " --k6-out                       K6 uri for an external metrics database"
  echo "                                See https://k6.io/docs/getting-started/results-output"
  echo "                                ENV: CDPERF_K6_OUT"
  echo "                                --"
  echo " --k6-scripts                   K6 scripts to run"
  echo "                                Default: ./tests/k6/test\-*.js"
  echo "                                ENV: CDPERF_K6_SCRIPTS"
  echo "                                --"
  echo " --k6-test-host                 Host of the cloud"
  echo "                                Required: true"
  echo "                                ENV: CDPERF_K6_TEST_HOST"
  echo "                                --"
  echo " --k6-quiet                     K6 disable progress updates"
  echo "                                ENV: CDPERF_K6_QUIET"
  echo "                                --"
  echo " --k6-cloud-id                  Id of the cloud"
  echo "                                ENV: CDPERF_K6_CLOUD_ID"
  echo "                                --"
  echo " --k6-cloud-login               Login-Name of the cloud user"
  echo "                                Default: admin"
  echo "                                ENV: CDPERF_K6_CLOUD_LOGIN"
  echo "                                --"
  echo " --k6-cloud-password            Login-Password of the cloud user"
  echo "                                Default: admin"
  echo "                                ENV: CDPERF_K6_CLOUD_PASSWORD"
  echo "                                --"
  echo " --k6-csv                       Output results file to CSV"
  echo "                                ENV: CDPERF_K6_CSV"
  echo "                                --"
  echo " --k6-json                      Output results file to JSON"
  echo "                                ENV: CDPERF_K6_JSON"
  echo "                                --"
  echo " --help                         Show help"
}

while test $# -gt 0; do
    case "$1" in
        --cloud-docker=*)
            cloud_docker="${1#*=}"
            shift
            ;;
        --cloud-docker-host=*)
            cloud_docker_host="${1#*=}"
            shift
            ;;
        --cloud-docker-image=*)
            cloud_docker_image="${1#*=}"
            shift
            ;;
        --cloud-docker-publish=*)
            cloud_docker_publish="${1#*=}"
            shift
            ;;
        --cloud-oidc=*)
            cloud_oidc="${1#*=}"
            shift
            ;;
        --cloud-oidc-issuer=*)
            cloud_oidc_issuer="${1#*=}"
            shift
            ;;
        --cloud-vendor=*)
            cloud_vendor="${1#*=}"
            shift
            ;;
        --k6-debug=*)
            k6_debug="${1#*=}"
            shift
            ;;
        --k6-docker=*)
            k6_docker="${1#*=}"
            shift
            ;;
        --k6-vus=*)
            k6_vus="${1#*=}"
            shift
            ;;
        --k6-iterations=*)
            k6_iterations="${1#*=}"
            shift
            ;;
        --k6-duration=*)
            k6_duration="${1#*=}"
            shift
            ;;
        --k6-out=*)
            k6_out="${1#*=}"
            shift
            ;;
        --k6-scripts=*)
            k6_scripts="${1#*=}"
            shift
            ;;
        --k6-test-host=*)
            k6_test_host="${1#*=}"
            shift
            ;;
        --k6-quiet=*)
            k6_quiet="${1#*=}"
            shift
            ;;
        --k6-cloud-id=*)
            k6_cloud_id="${1#*=}"
            shift
            ;;
        --k6-cloud-login=*)
            k6_cloud_login="${1#*=}"
            shift
            ;;
        --k6-cloud-password=*)
            k6_cloud_password="${1#*=}"
            shift
            ;;
        --k6-csv=*)
            k6_csv="${1#*=}"
            shift
            ;;
        --k6-json=*)
            k6_json="${1#*=}"
            shift
            ;;
        --help)
            usage
            exit 0
            ;;
        *)
            usage
            exit 1
            break
            ;;
    esac
done

[[ $cloud_vendor !=  "ocis" && $cloud_vendor !=  "oc10" && $cloud_vendor != "nextcloud" ]] && echo "Error: cloud_vendor not set. --cloud-vendor=( ocis | oc10 | nextcloud )" && exit 1
[[ ! $k6_test_host ]] && echo "Error: k6_test_host not set. --cloud-host=https://host.docker.internal:9200" && exit 1

cloud_docker_env=()

if [[ $cloud_vendor == "ocis" ]]
then
  [[ ! $cloud_docker_image ]] && cloud_docker_image="owncloud/ocis"
  [[ ! $cloud_docker_publish ]] && cloud_docker_publish="9200:9200"
  [[ $cloud_oidc != true ]] && cloud_docker_env+=("PROXY_ENABLE_BASIC_AUTH=true")
elif [[ $cloud_vendor == "oc10" ]]
then
  [[ ! $cloud_docker_image ]] && cloud_docker_image="owncloud/server"
  [[ ! $cloud_docker_publish ]] && cloud_docker_publish="9200:8080"
elif [[ $cloud_vendor == "nextcloud" ]]
then
  [[ ! $cloud_docker_image ]] && cloud_docker_image="nextcloud"
  [[ ! $cloud_docker_publish ]] && cloud_docker_publish="9200:80"
  cloud_docker_env+=("NEXTCLOUD_ADMIN_USER=admin")
  cloud_docker_env+=("NEXTCLOUD_ADMIN_PASSWORD=admin")
  cloud_docker_env+=("SQLITE_DATABASE=cdperf")
  cloud_docker_env+=("OVERWRITEHOST=host.docker.internal")
fi

function set_docker_host() {
  if [[ $1 ]]
  then
    export DOCKER_HOST=$1
  elif [[ $host_docker_host ]]
  then
    export DOCKER_HOST=$host_docker_host
  else
    unset DOCKER_HOST
  fi
}

function cloud_stop() {
  set_docker_host "$cloud_docker_host"

  # stop old container
  cloud_container=$(docker ps -q --filter ancestor=$cloud_docker_image)
  [[ $cloud_container ]] && docker stop "$cloud_container"
}

function cloud_start() {
  set_docker_host "$cloud_docker_host"
  cloud_stop

  for i in "${!cloud_docker_env[@]}"
  do
    cloud_docker_env[$i]="--env ${cloud_docker_env[$i]}"
  done
  # start new container
  # shellcheck disable=SC2068
  docker run ${cloud_docker_env[@]} --rm --detach --pull always --publish $cloud_docker_publish $cloud_docker_image
}

function k6_run(){
  set_docker_host

  k6_params=()
  [[ $k6_duration ]] && k6_params+=("--duration=$k6_duration")
  [[ $k6_iterations ]] && k6_params+=("--iterations=$k6_iterations")
  [[ $k6_vus ]] && k6_params+=("--vus=$k6_vus")
  [[ $k6_out ]] && k6_params+=("--out=$k6_out")
  [[ $k6_debug ]] && k6_params+=("--http-debug")
  [[ $k6_csv ]] && k6_params+=("--out csv=$k6_csv")
  [[ $k6_json ]] && k6_params+=("--out json=$k6_json")
  [[ $k6_quiet == true ]] && k6_params+=("--quiet")

  k6_env=()
  [[ $k6_test_host ]] && k6_env+=("CLOUD_HOST=$k6_test_host")
  [[ $k6_cloud_id ]] && k6_env+=("CLOUD_ID=$k6_cloud_id")
  [[ $k6_cloud_login ]] && k6_env+=("CLOUD_LOGIN=$k6_cloud_login")
  [[ $k6_cloud_password ]] && k6_env+=("CLOUD_PASSWORD=$k6_cloud_password")
  [[ $cloud_oidc == true ]] && k6_env+=("CLOUD_OIDC_ENABLED=$cloud_oidc")
  [[ $cloud_vendor ]] && k6_env+=("CLOUD_VENDOR=$cloud_vendor")
  [[ $cloud_oidc_issuer ]] && k6_env+=("CLOUD_OIDC_ISSUER=$cloud_oidc_issuer")

  for i in "${!k6_env[@]}"
  do
    export "${k6_env[$i]}"
    k6_env[$i]="--env ${k6_env[$i]}"
  done

  # run k6
  for t in $(realpath "$k6_scripts");
  do
    if [[ -f $t ]]
    then
      if [[ $k6_docker == true ]]
      then
        # shellcheck disable=SC2068
        docker run ${k6_env[@]} --add-host=host.docker.internal:host-gateway --rm "owncloud/cdperf-k6" k6 run "${k6_params[@]}" "$(basename "$t")"
      else
        # shellcheck disable=SC2068
        k6 run ${k6_params[@]} "$t"
      fi
    else
       echo "Error: k6 test file '$t' does not exist"
    fi
  done
}

function start(){
[[ $cloud_docker != false ]] && cloud_start

# wait for cloud container to be ready
wait_host="${k6_test_host/host.docker.internal/localhost}"
until curl --output /dev/null --head --fail --silent --insecure "$wait_host"; do
  echo "waiting for '$cloud_vendor' on '$wait_host'"
  sleep 1
done
}

function run(){
  k6_run
}

function stop(){
  [[ $cloud_docker != false ]] && cloud_stop
}

start
run
stop
